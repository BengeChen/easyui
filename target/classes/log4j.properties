## DEBUG < INFO < WARN < ERROR < FATAL  
##log4j.rootLogger=WARN, stdout, file  
##log4j.appender.stdout=org.apache.log4j.ConsoleAppender  
##log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  
##log4j.appender.stdout.layout.ConversionPattern=  
##  
### Output to the File  
##log4j.appender.file=org.apache.log4j.FileAppender  
##log4j.appender.file.File=./logs/XXXXX.log  
##log4j.appender.file.layout=org.apache.log4j.PatternLayout  
##log4j.appender.file.layout.ConversionPattern=%n%-d{yyyy-MM-dd HH:mm:ss}%n[%p]-[Thread: %t]-[%C.%M()]: %m%n  
#  
## Log4j提供的layout有以下几种：   
##1)org.apache.log4j.HTMLLayout(以HTML表格形式布局)   
##2)org.apache.log4j.PatternLayout(可以灵活地指定布局模式)   
##3)org.apache.log4j.SimpleLayout(包含日志信息的级别和信息字符串)   
##4)org.apache.log4j.TTCCLayout(包含日志产生的时间、线程、类别等等信息)   
##5)org.apache.log4j.xml.XMLLayout(以XML形式布局)   
#  
## 将需要开启的卸载rootLogger里即可  
## systemOut,logFile,logDailyFile,logRollingFile,logMail,logDB  
#log4j.rootLogger=debug,stdout,logfile  
## 输出到控制台   
#log4j.appender.systemOut=org.apache.log4j.ConsoleAppender   
# org.apache.log4j.PatternLayout(可以灵活地指定布局模式)   
#log4j.appender.systemOut.layout=org.apache.log4j.PatternLayout   
## %n%-d{yyyy-MM-dd HH:mm:ss}%n[%p]-[Thread: %t]-[%C.%M()]: %m%n  
#log4j.appender.systemOut.layout.ConversionPattern=[%-5p][%-22d{yyyy-MM-dd HH:mm:ssS}][%l]%n%m%n   
## 指定日志消息的输出最低层次  
#log4j.appender.systemOut.Threshold=DEBUG   
## TRUE:默认值是true,所有的消息都会被立即输出  
#log4j.appender.systemOut.ImmediateFlush=TRUE  
## System.err:默认值System.out,输出到控制台(err为红色,out为黑色)   
#log4j.appender.systemOut.Target=System.out   
#  
###输出到文件   
##log4j.appender.logFile=org.apache.log4j.FileAppender   
##log4j.appender.logFile.layout=org.apache.log4j.PatternLayout   
##log4j.appender.logFile.layout.ConversionPattern=[%-5p][%-22d{yyyy-MM-dd HH:mm:ssS}][%l]%n%m%n  
##log4j.appender.logFile.Threshold=WARN   
##log4j.appender.logFile.ImmediateFlush=TRUE   
### FALSE:默认值true,将消息追加到指定文件中，false指将消息覆盖指定的文件内容   
##log4j.appender.logFile.Append=TRUE   
### C:\log4j.log:指定消息输出到C:\log4j.log文件  
##log4j.appender.logFile.File=${catalina.home}/logs/easyui.log/easyui.log  
### Encoding 编码方式  
##log4j.appender.logFile.Encoding=UTF-8   
#  
###按DatePattern输出到文件   
##log4j.appender.logDailyFile=org.apache.log4j.DailyRollingFileAppender   
##log4j.appender.logDailyFile.layout=org.apache.log4j.PatternLayout   
##log4j.appender.logDailyFile.layout.ConversionPattern=[%-5p][%-22d{yyyy-MM-dd HH:mm:ssS}][%l]%n%m%n   
##log4j.appender.logDailyFile.Threshold=WARN   
##log4j.appender.logDailyFile.ImmediateFlush=TRUE   
##log4j.appender.logDailyFile.Append=TRUE   
##log4j.appender.logDailyFile.File=${catalina.home}/logs/easyui.logeasyui.log  
###   '.'yyyy-ww:每周滚动一次文件,即每周产生一个新的文件 , 还可以按用以下参数:  
###   '.'yyyy-MM:每月   
###   '.'yyyy-ww:每周   
###   '.'yyyy-MM-dd:每天   
###   '.'yyyy-MM-dd-a:每天两次   
###   '.'yyyy-MM-dd-HH:每小时   
###   '.'yyyy-MM-dd-HH-mm:每分钟   
##log4j.appender.logDailyFile.DatePattern='${catalina.base}/logs/easyui.logeasyui_'yyyy-MM-dd'.log'   
##log4j.appender.logDailyFile.Encoding=UTF-8   
#  
##设定文件大小输出到文件   
#log4j.appender.logRollingFile=org.apache.log4j.RollingFileAppender   
#log4j.appender.logRollingFile.layout=org.apache.log4j.PatternLayout   
#log4j.appender.logRollingFile.layout.ConversionPattern=[%-5p][%-22d{yyyy-MM-dd HH:mm:ssS}][%l]%n%m%n   
#log4j.appender.logRollingFile.Threshold=WARN   
#log4j.appender.logRollingFile.ImmediateFlush=TRUE   
#log4j.appender.logRollingFile.Append=TRUE   
#log4j.appender.logRollingFile.File=${catalina.home}/logs/easyui.log  
## 100KB:后缀可以是KB,MB,GB.在日志文件到达该大小时,将会自动滚动.如:log4j.log.1   
#log4j.appender.logRollingFile.MaxFileSize=20MB   
## 2:指定可以产生的滚动文件的最大数   
#log4j.appender.logRollingFile.MaxBackupIndex=100  
#log4j.appender.logRollingFile.Encoding=UTF-8
##mybatis显示SQL语句日志配置
#log4j.logger.com.ibatis=DEBUG  
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG  
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG  
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG  
#log4j.logger.java.sql.Connection=DEBUG  
#log4j.logger.java.sql.Statement=DEBUG  
#log4j.logger.java.sql.PreparedStatement=DEBUG     
#  
##用Email发送日志   
##log4j.appender.logMail = org.apache.log4j.net.SMTPAppender   
##log4j.appender.logMail.layout = org.apache.log4j.HTMLLayout   
##log4j.appender.logMail.layout.LocationInfo = TRUE   
##log4j.appender.logMail.layout.Title = Log4j Log Messages   
##log4j.appender.logMail.Threshold = WARN   
##log4j.appender.logMail.SMTPDebug = FALSE   
##log4j.appender.logMail.SMTPHost = smtp.mxhichina.com  
##log4j.appender.logMail.From = admin@XXXXX.cc  
#  
##log4j.appender.logMail.To = XXX@qq.com,XXXX@qq.com  
##log4j.appender.logMail.SMTPUsername = admin@XXXXX.cc  
##log4j.appender.logMail.SMTPPassword = XXXXXXXX  
##log4j.appender.logMail.Subject = Log4j报错提示   
##log4j.appender.logMail.BufferSize = 1024   
##log4j.appender.logMail.SMTPAuth = TRUE   
#  
##将日志登录到MySQL数据库   
##log4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppender   
##log4j.appender.logDB.layout = org.apache.log4j.PatternLayout   
##log4j.appender.logDB.Driver = com.mysql.jdbc.Driver   
##log4j.appender.logDB.URL = jdbc:mysql://127.0.0.1:3306/xly   
##log4j.appender.logDB.User = root   
##log4j.appender.logDB.Password = 123456   
##log4j.appender.logDB.Sql = INSERT INTOT_log4j(project_name,create_date,level,category,file_name,thread_name,line,all_category,message)values('Struts2','%d{yyyy-MM-ddHH:mm:ss}','%p','%c','%F','%t','%L','%l','%m')  